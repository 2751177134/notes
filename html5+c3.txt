
form表单 input类型 type=“ ”

url      只能输入网址  必须包含http：//

tel      为了能够在移动端点击时弹出数字键盘

number   只能输入数字 不能输入字符 可加上限下限 max=“” min=”“

search   提供更人性化的输入体验

range    范围  也有上限下限  （默认在中间）

color    颜色拾取 

date     时间（年月日）

time     时间（时分秒）

datetime  年月日时分  （大部分浏览器不支持用于屏幕阅读器）

datetime-local  日期时间

month  月份

week  星期




input中的额属性

placeholder=“”  占位符（value输入时消失 没有时出现）

autofocus   打开自动获取焦点

<input type="address" form="myform（表单的id）” />   在表单外的input跟表单一起提交


autocmplete =“on/off”  记录输入的value值 （要提交一次）自动完成(打开 关闭)   必须有name属性   

required  必须输入 没输入则阻止提交

pattern =“^(+86)?$”  tel中正则验证

multiple        在file中选择多个文件  在email 中可输入多个邮箱地址



<datelist id=" " >  id与input中的
	<option value="" lable="">
</datelist>   下拉显示


oninput  指定元素输入触发事件
onkeyup   键盘弹起触发 （鼠标复制不算）

oninvalid  验证不通过时触发

setCustomValidity(" ")   改变默认提示框中的内容    

<progress max=“100”value=“100”></progress>进度条
<meter></meter>  度量器   low 规定的较低的值  high 规定的较高的值
 

<fieldset></fieldset>  设置表单边框
<legond></legond>  表单标题 跟fieldset连用

<audio src=" " controls></audio>
controls 音乐播放器控制面板
autoplay 背景音乐控制
loop 循环播放

<video></video> 
poster=" 地址"    视屏未播放时显示的图片（不设置默认显示视屏第一帧）
height=  width= （只设置其中一个更img用法相同）都设置了视屏则其中的一个值不变 只显示占用的大小
<video>
	<source src="  .flv" type="video/fiv"></source>根据视屏的格式设置
	<source src="  .mp4" type="video/mp4"></source>
</video> 

document.querySelector（） 获取选择带的第一个元素
document.querySelectorAll（） 获取满足选择的所有元素

添加的dom属性
classLiss.add("") 一次只能添加一个类名
classList.remove(“”)  移除每一样式
classList.toggle("")  有这个样式就删除 没有就添加
classList.contains（“”） 判断有没有这个类名
 
ononline  网络连接事件
  window.addEventListener("online",function(){  })
onoffline  网络断开事件
  window.addEventListener("offline",function(){  })
 

.requestFullScreen()
不同的浏览器必须加前缀 chrome: webkit   firefox:moz  ie:ms  opera:o 
if（div.requestFullScreen()）{
	div.requestFullScreen()
}elsr if(div.webkitRequestFullScreen()){
	div.webkitRequestFullScreen()
}else if(div.mozRequestFullScreen()){
	div.mozRequestFullScreen()
}else if(div.msRequestFullScreen()){
	div.msRequestFullScreen()
}。。。

  退出全屏要对document使用（跟上面一样判断使用）
if（document.cancelFullScreen()）{
	document.cancelFullScreen()
}
else if(div.webkitCancelFullScreen()){
	div.webkitCancelFullScreen()
}。。。

判断是否全屏fullScreenElement（）
if（document.fullScreenElement（）||document.webkitFullScreenElement（）||document.mozFullScreenElement（）||document.msFullScreenElement（））{
}

readAstext() 读取文本文件（可以使用Txt打开的文件），返回文本字符串，
readAsBinaryString（） ：读取任意文件 返回二进制字符串，用来存储文件
readAsDataURL（） 读取文件获取一段以data开头的字符串，本质为DataURL.（这个文件一般就是指图像或者能过嵌入到文档的文件）格式DataURL将资源转换为base64编码的字符串形式 将这些内容直接存储在URL中》》优化网站的加载速度


event.preventDefault（） 阻止浏览器的默认事件
同一个事件可以与不同的事件对象 比如拖拽



css3333333333

属性选择器
E[attr]查找拥有attr属性的标签E
E[attr=value]查找拥有attr属性且值为value的标签E
E[attr*=value]查找用于attr属性并且属性值包含（可以在任意位子）value的标签E
E[attr^=value]查找拥有attr属性并且属性值以value开头的标签E
E[attr$=value]查找拥有attr属性并且属性值以value结尾的标签E


兄弟伪类
.类名+相邻标签E{ }  类名相邻的兄弟标签E（必须紧挨着）
.类名~相邻标签E{ }  类名所有的兄弟标签E

E:first-child{ }  查找E的父元素中第一个E元素（必须是E元素）
E:last-child{ }
E:first-of-type{ } 查找E的父元素中第一个E元素(跳过其他元素)
E:last-of-type{ }
E:empty{ }  查找E的父元素中空值元素E （）
E:nth-child( ){ }  括号中可写索引（索引必须从1开始） 或者关键字（even ||odd）或者表达式（所有的子元素的选中 但只有E标签的样式改变）
E:nth-of-type( ){ }  括号中可写索引 或者关键字（even ||odd）或者表达式（限制类只选E）
E:nth-last-of-type( ){ }  （从后面数）括号中可写索引 或者关键字（even ||odd）或者表达式（限制类只选E）

E:target{  }  当锚点元素被触发时 添加样式


伪元素
::before{  }
::after{  }

::first-letter{  } 首字母或字改变样式
::first-line{  } 首行改变样式
::selection{  }在选取时 改变样式（只能改变显示的样式 不能改变大小）


border-sizing:border-box; 盒子的整体尺寸不变（width+border+padding)
border-sizing:content-box; 盒子中的内容尺寸不变

边框阴影
box-shadow:h(水平偏移) v(垂直偏移) blur（模糊度） spread(阴影尺寸，默认0) color inset(内阴影)
text-shadow：x y blur color;


linear-gradient([<point>||<angle>,]?<stop>,<stop>[,<stop>]*)
point :  to left ,to right ,to top, to  bottom(默认值)
background:linear-gradient(to right,red 0%,blue 50%, red 100%) 从左到右 百分比为颜色的位置 

径向渐变
background: radial-greadient(shape形 size(范围大小) at（中心坐标),颜色，颜色)；
circle  正方形渐变      ellipse    适配当前的形状
坐标默认中心 可选left center right top bottom 或者(坐标x 、y)
size：close-side 最近的边 closeset-corner最近的角  farthest-side  farthest-corner
background: radial-greadient(#fff 0,#fff 10px,#red 20px)  白色圆点平铺；

重复渐变
background:repeating-radial-gradient()

background-repeat:round (缩放平铺)
background-repeat：space; 不会平铺 图片之间产生相同的间距
background-attachment:local;  图片与内容一起滚动

background-size:长宽/ % /contain(适应背景区域)/cover（适应整个背景区域，可能会溢出）

background-origin:border-box/padding-box/content-box; 设置背景坐标的原点
background-clip：border-box/padding-box/content-box;  设置背景显示的范围

background-blend-mode：lighten； 混合色 将底色从背景图片透出来

border-image-source；url（）；边框背景 默认只填充容器的四个角
border-image-slice：1/3边框背景长度 fill（内容部分填充）；
border-image-width:; 边框背景的宽度
border-image-outside： 扩展边框（在原边框的基础上向外扩张 不占位置）；
border-image-repeat:stretch（拉伸）/round(平铺)；


transition-property:left；	方向
transition-duration:2s；  时间
transition-timing-function：linear；匀速
transition-delay：1s；  延迟发生时间
transition：left 2s liner 1s；

多个样式添加过渡效果
transition：left 2s linear 1s，background-color 5s linear 0s；

transform 实线元素的移动
transform：translate（,）/translateX( ) 一个参数就代表x 两个代表想x，y
transform:scale( ,)/scaleX() 一个参数代表等比例缩放（1为normal）两参数分别比例缩放
transform:rotate( deg) 旋转角度为正 就是顺势旋转 
transform：skew（ Xdeg,Ydeg）/skewX（ ） 角度值为正则网负方向斜切 反之往正方向斜切


3d移动
transform：translate3d(X,Y,Z)必须是三个值
3d缩放
transform:scale3d（X，Y，Z）
3d旋转
transform:rotate3d（X，Y，Z，deg） 谁有值就延谁旋转

transform-style：preserve-3d；保留3d移动后的效果
prepective：0px；添加透视效果 数值越大视角离盒子中心越远
prepective-orign：Xpx Ypx；  左右上下调节透视视角


{
	animation-name:moveTest;
	animation-duration:2s;
	animation-iteration-count:次数/infinite（无限）；
	animation-direction：alternate；（来回交替动画）
	animation-delay：延时时间；
	animation-fill-mode：forwards/backwards/both;
		backward；不保留动画结束后的状态（有初始状态就立即进入初始状态）；
		forwards；保留动画的结束后的状态 (有初始状态不会立即进入初始状态)；
		both；保留东湖结束后的状态，有初始状态就立即进入初始状态；
	animation-timing-function：linear；匀速
	animation-play-state：running/paused;播放/暂停
	
	
}
@keyframes moveTest{
	0%{}
	100%{}
}



column-count：列数；
column-rule:dashed 3px red; 每列用虚线隔开
column-gap；50px；间隙大小
column-width：200px；每列宽度；
column-span：1/all;夸列显示（一般用于标题）

